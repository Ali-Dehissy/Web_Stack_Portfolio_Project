{"ast":null,"code":"import axios from 'axios';\nexport const fetchTournaments = async () => {\n  const apiKey = '6PPhLJhOXgrIleMLPsAR_b_oQzTsOTC845yiOufOAyt4L-MJOwA'; // Replace with your actual API key\n  const url = 'https://api.pandascore.io/lol/tournaments';\n  try {\n    const response = await axios.get(url, {\n      headers: {\n        'Authorization': `Bearer ${apiKey}`\n      }\n    });\n    console.log('API Response:', response.data); // Debugging\n    return response.data;\n  } catch (error) {\n    console.error('Error fetttching tournaments:', error.message);\n    throw new Error(`Error fetching tournaments: ${error.message}`);\n  }\n};","map":{"version":3,"names":["axios","fetchTournaments","apiKey","url","response","get","headers","console","log","data","error","message","Error"],"sources":["/home/ali/Tunisian-Esports-Champions-/src/components/tournamentService.js"],"sourcesContent":["import axios from 'axios';\n\nexport const fetchTournaments = async () => {\n  const apiKey = '6PPhLJhOXgrIleMLPsAR_b_oQzTsOTC845yiOufOAyt4L-MJOwA'; // Replace with your actual API key\n  const url = 'https://api.pandascore.io/lol/tournaments';\n\n  try {\n    const response = await axios.get(url, {\n      headers: {\n        'Authorization': `Bearer ${apiKey}`\n      }\n    });\n\n    console.log('API Response:', response.data); // Debugging\n    return response.data;\n  } catch (error) {\n    console.error('Error fetttching tournaments:', error.message);\n    throw new Error(`Error fetching tournaments: ${error.message}`);\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EAC1C,MAAMC,MAAM,GAAG,qDAAqD,CAAC,CAAC;EACtE,MAAMC,GAAG,GAAG,2CAA2C;EAEvD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAACF,GAAG,EAAE;MACpCG,OAAO,EAAE;QACP,eAAe,EAAE,UAAUJ,MAAM;MACnC;IACF,CAAC,CAAC;IAEFK,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAC;IAC7C,OAAOL,QAAQ,CAACK,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAACC,OAAO,CAAC;IAC7D,MAAM,IAAIC,KAAK,CAAC,+BAA+BF,KAAK,CAACC,OAAO,EAAE,CAAC;EACjE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/ali/Tunisian-Esports-Champions-/src/components/TournamentList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchTournaments } from './tournamentService'; // Ensure this path is correct\nimport './TournamentList.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TournamentList = () => {\n  _s();\n  const [tournaments, setTournaments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const getTournaments = async () => {\n      try {\n        const response = await fetchTournaments();\n        console.log('Fetched tournaments:', response); // Inspect the structure\n        setTournaments(response.tournaments || []); // Adjust based on actual response\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getTournaments();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"loading-message\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"error-message\",\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Upcoming Tournaments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tournament-grid\",\n      children: tournaments.length > 0 ? tournaments.map(tournament => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tournament-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"tournament-name\",\n          children: tournament.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 29\n        }, this), tournament.image_url ? /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"tournament-image\",\n          src: tournament.image_url,\n          alt: tournament.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No image available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"URL: \", /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"tournament-link\",\n            href: tournament.url,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: tournament.url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tournament-slug\",\n          children: [\"Slug: \", tournament.slug]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this)]\n      }, tournament.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-tournaments-message\",\n        children: \"No upcoming tournaments found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(TournamentList, \"6hmAMGZ9ANXztU8LjjGmfG53uIc=\");\n_c = TournamentList;\nexport default TournamentList;\nvar _c;\n$RefreshReg$(_c, \"TournamentList\");","map":{"version":3,"names":["React","useState","useEffect","fetchTournaments","jsxDEV","_jsxDEV","TournamentList","_s","tournaments","setTournaments","loading","setLoading","error","setError","getTournaments","response","console","log","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","tournament","name","image_url","src","alt","href","url","target","rel","slug","id","_c","$RefreshReg$"],"sources":["/home/ali/Tunisian-Esports-Champions-/src/components/TournamentList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchTournaments } from './tournamentService'; // Ensure this path is correct\nimport './TournamentList.css'; // Import the CSS file\n\nconst TournamentList = () => {\n    const [tournaments, setTournaments] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const getTournaments = async () => {\n            try {\n                const response = await fetchTournaments();\n                console.log('Fetched tournaments:', response); // Inspect the structure\n                setTournaments(response.tournaments || []); // Adjust based on actual response\n            } catch (err) {\n                setError(err.message);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        getTournaments();\n    }, []);\n\n    if (loading) return <p className=\"loading-message\">Loading...</p>;\n    if (error) return <p className=\"error-message\">Error: {error}</p>;\n\n    return (\n        <div className=\"container\">\n            <h1 className=\"title\">Upcoming Tournaments</h1>\n            <div className=\"tournament-grid\">\n                {tournaments.length > 0 ? (\n                    tournaments.map(tournament => (\n                        <div className=\"tournament-card\" key={tournament.id}>\n                            <h2 className=\"tournament-name\">{tournament.name}</h2>\n                            {/* Ensure tournament.image_url is correctly accessed */}\n                            {tournament.image_url ? (\n                                <img className=\"tournament-image\" src={tournament.image_url} alt={tournament.name} />\n                            ) : (\n                                <p>No image available</p>\n                            )}\n                            <p>URL: <a className=\"tournament-link\" href={tournament.url} target=\"_blank\" rel=\"noopener noreferrer\">{tournament.url}</a></p>\n                            <p className=\"tournament-slug\">Slug: {tournament.slug}</p>\n                            {/* Add more properties as needed */}\n                        </div>\n                    ))\n                ) : (\n                    <p className=\"no-tournaments-message\">No upcoming tournaments found.</p>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default TournamentList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
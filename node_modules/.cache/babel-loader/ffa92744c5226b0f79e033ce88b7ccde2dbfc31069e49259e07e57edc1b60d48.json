{"ast":null,"code":"const getTournaments = async () => {\n  const apiKey = 'YOUR_PANDASCORE_API_KEY'; // Replace with your Pandascore API key\n  const url = 'https://api.pandascore.co/lol/tournaments';\n  try {\n    const response = await axios.get(url, {\n      headers: {\n        'Authorization': `Bearer ${apiKey}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching tournaments:', error.response ? error.response.data : error.message);\n    throw new Error(`Error fetching tournaments: ${error.response ? error.response.data : error.message}`);\n  }\n};","map":{"version":3,"names":["getTournaments","apiKey","url","response","axios","get","headers","data","error","console","message","Error"],"sources":["/home/ali/Tunisian-Esports-Champions-/src/components/tournamentService.js"],"sourcesContent":["const getTournaments = async () => {\n    const apiKey = 'YOUR_PANDASCORE_API_KEY'; // Replace with your Pandascore API key\n    const url = 'https://api.pandascore.co/lol/tournaments';\n  \n    try {\n      const response = await axios.get(url, {\n        headers: {\n          'Authorization': `Bearer ${apiKey}`\n        }\n      });\n  \n      return response.data;\n    } catch (error) {\n      console.error('Error fetching tournaments:', error.response ? error.response.data : error.message);\n      throw new Error(`Error fetching tournaments: ${error.response ? error.response.data : error.message}`);\n    }\n  };\n  "],"mappings":"AAAA,MAAMA,cAAc,GAAG,MAAAA,CAAA,KAAY;EAC/B,MAAMC,MAAM,GAAG,yBAAyB,CAAC,CAAC;EAC1C,MAAMC,GAAG,GAAG,2CAA2C;EAEvD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAG,CAACH,GAAG,EAAE;MACpCI,OAAO,EAAE;QACP,eAAe,EAAE,UAAUL,MAAM;MACnC;IACF,CAAC,CAAC;IAEF,OAAOE,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAACL,QAAQ,GAAGK,KAAK,CAACL,QAAQ,CAACI,IAAI,GAAGC,KAAK,CAACE,OAAO,CAAC;IAClG,MAAM,IAAIC,KAAK,CAAC,+BAA+BH,KAAK,CAACL,QAAQ,GAAGK,KAAK,CAACL,QAAQ,CAACI,IAAI,GAAGC,KAAK,CAACE,OAAO,EAAE,CAAC;EACxG;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
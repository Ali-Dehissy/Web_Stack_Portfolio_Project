{"ast":null,"code":"var _jsxFileName = \"/home/ali/Tunisian-Esports-Champions-/src/components/GamesNews.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './GamesNews.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GamesNews = () => {\n  _s();\n  const [news, setNews] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const apiKey = 'bd158c9a65504f5786aa5ca60bf0bc21'; // Your NewsAPI Key\n  const games = ['League of Legends', 'Warzone', 'Valorant', 'Fortnite'];\n\n  // Updated trusted sources\n  const trustedSources = ['Dot Esports', 'IGN', 'Dexerto', 'Polygon', 'PC Gamer', 'GameSpot', 'The Esports Observer', 'Esports Insider', 'Esports.net', 'Upcomer'];\n  useEffect(() => {\n    const fetchNewsForGames = async () => {\n      try {\n        const newsPromises = games.map(game => axios.get('https://newsapi.org/v2/everything', {\n          params: {\n            q: game,\n            language: 'en',\n            apiKey: apiKey\n          }\n        }));\n        const responses = await Promise.all(newsPromises);\n        const allArticles = [];\n        responses.forEach((response, index) => {\n          let articles = response.data.articles;\n\n          // Apply filters\n          articles = filterByDate(articles);\n          articles = filterBySource(articles);\n\n          // Add a check to avoid empty articles\n          if (articles.length > 0) {\n            articles.forEach(article => {\n              // Avoid duplicate articles by checking if it's already added\n              if (!allArticles.some(a => a.title === article.title)) {\n                allArticles.push(article);\n              }\n            });\n          }\n        });\n        setNews(allArticles.sort((a, b) => new Date(b.publishedAt) - new Date(a.publishedAt)));\n        setLoading(false);\n      } catch (err) {\n        setError('Failed to fetch news');\n        setLoading(false);\n      }\n    };\n    fetchNewsForGames();\n  }, []);\n  const filterByDate = (articles, daysAgo = 7) => {\n    const cutoffDate = new Date();\n    cutoffDate.setDate(cutoffDate.getDate() - daysAgo);\n    return articles.filter(article => new Date(article.publishedAt) >= cutoffDate);\n  };\n  const filterBySource = articles => {\n    return articles.filter(article => trustedSources.includes(article.source.name));\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading news...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"games-news-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Latest News\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"news-grid\",\n      children: news.length > 0 ? news.map((article, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"news-card\",\n        children: [article.urlToImage && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: article.urlToImage,\n          alt: article.title,\n          className: \"news-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"news-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: article.url,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"news-title\",\n              children: article.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"news-description\",\n            children: article.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No news available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n_s(GamesNews, \"dnyV8mF20OMyQNVA7eK4lKLrbaU=\");\n_c = GamesNews;\nexport default GamesNews;\nvar _c;\n$RefreshReg$(_c, \"GamesNews\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","GamesNews","_s","news","setNews","loading","setLoading","error","setError","apiKey","games","trustedSources","fetchNewsForGames","newsPromises","map","game","get","params","q","language","responses","Promise","all","allArticles","forEach","response","index","articles","data","filterByDate","filterBySource","length","article","some","a","title","push","sort","b","Date","publishedAt","err","daysAgo","cutoffDate","setDate","getDate","filter","includes","source","name","children","fileName","_jsxFileName","lineNumber","columnNumber","className","urlToImage","src","alt","href","url","target","rel","description","_c","$RefreshReg$"],"sources":["/home/ali/Tunisian-Esports-Champions-/src/components/GamesNews.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './GamesNews.css'; // Import the CSS file\n\nconst GamesNews = () => {\n    const [news, setNews] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    const apiKey = 'bd158c9a65504f5786aa5ca60bf0bc21'; // Your NewsAPI Key\n    const games = [\n        'League of Legends',\n        'Warzone',\n        'Valorant',\n        'Fortnite'\n    ];\n\n    // Updated trusted sources\n    const trustedSources = [\n        'Dot Esports',\n        'IGN',\n        'Dexerto',\n        'Polygon',\n        'PC Gamer',\n        'GameSpot',\n        'The Esports Observer',\n        'Esports Insider',\n        'Esports.net',\n        'Upcomer'\n    ];\n\n    useEffect(() => {\n        const fetchNewsForGames = async () => {\n            try {\n                const newsPromises = games.map(game =>\n                    axios.get('https://newsapi.org/v2/everything', {\n                        params: {\n                            q: game,\n                            language: 'en',\n                            apiKey: apiKey\n                        }\n                    })\n                );\n\n                const responses = await Promise.all(newsPromises);\n\n                const allArticles = [];\n\n                responses.forEach((response, index) => {\n                    let articles = response.data.articles;\n\n                    // Apply filters\n                    articles = filterByDate(articles);\n                    articles = filterBySource(articles);\n\n                    // Add a check to avoid empty articles\n                    if (articles.length > 0) {\n                        articles.forEach(article => {\n                            // Avoid duplicate articles by checking if it's already added\n                            if (!allArticles.some(a => a.title === article.title)) {\n                                allArticles.push(article);\n                            }\n                        });\n                    }\n                });\n\n                setNews(allArticles.sort((a, b) => new Date(b.publishedAt) - new Date(a.publishedAt)));\n                setLoading(false);\n            } catch (err) {\n                setError('Failed to fetch news');\n                setLoading(false);\n            }\n        };\n\n        fetchNewsForGames();\n    }, []);\n\n    const filterByDate = (articles, daysAgo = 7) => {\n        const cutoffDate = new Date();\n        cutoffDate.setDate(cutoffDate.getDate() - daysAgo);\n\n        return articles.filter(article => new Date(article.publishedAt) >= cutoffDate);\n    };\n\n    const filterBySource = (articles) => {\n        return articles.filter(article => trustedSources.includes(article.source.name));\n    };\n\n    if (loading) {\n        return <p>Loading news...</p>;\n    }\n\n    if (error) {\n        return <p>{error}</p>;\n    }\n\n    return (\n        <div className=\"games-news-container\">\n            <h2>Latest News</h2>\n            <div className=\"news-grid\">\n                {news.length > 0 ? (\n                    news.map((article, index) => (\n                        <div key={index} className=\"news-card\">\n                            {article.urlToImage && (\n                                <img src={article.urlToImage} alt={article.title} className=\"news-image\" />\n                            )}\n                            <div className=\"news-content\">\n                                <a href={article.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                                    <h3 className=\"news-title\">{article.title}</h3>\n                                </a>\n                                <p className=\"news-description\">{article.description}</p>\n                            </div>\n                        </div>\n                    ))\n                ) : (\n                    <p>No news available.</p>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default GamesNews;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
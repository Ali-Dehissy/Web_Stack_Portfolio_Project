{"ast":null,"code":"useEffect(() => {\n  const fetchNewsForGames = async () => {\n    try {\n      const newsPromises = games.map(game => axios.get('https://newsapi.org/v2/everything', {\n        params: {\n          q: game,\n          language: 'en',\n          apiKey: apiKey,\n          pageSize: 20 // Fetch more articles, adjust this number as needed\n        }\n      }));\n      const responses = await Promise.all(newsPromises);\n      const allArticles = [];\n      responses.forEach(response => {\n        let articles = response.data.articles;\n\n        // Apply filters\n        articles = filterByDate(articles);\n        articles = filterBySource(articles);\n\n        // Add a check to avoid empty articles\n        if (articles.length > 0) {\n          articles.forEach(article => {\n            // Avoid duplicate articles by checking if it's already added\n            if (!allArticles.some(a => a.title === article.title)) {\n              allArticles.push(article);\n            }\n          });\n        }\n      });\n      setNews(allArticles.sort((a, b) => new Date(b.publishedAt) - new Date(a.publishedAt)));\n      setLoading(false);\n    } catch (err) {\n      setError('Failed to fetch news');\n      setLoading(false);\n    }\n  };\n  fetchNewsForGames();\n}, []);","map":{"version":3,"names":["useEffect","fetchNewsForGames","newsPromises","games","map","game","axios","get","params","q","language","apiKey","pageSize","responses","Promise","all","allArticles","forEach","response","articles","data","filterByDate","filterBySource","length","article","some","a","title","push","setNews","sort","b","Date","publishedAt","setLoading","err","setError"],"sources":["/home/ali/Tunisian-Esports-Champions-/src/components/GamesNews.jsx"],"sourcesContent":["useEffect(() => {\n    const fetchNewsForGames = async () => {\n        try {\n            const newsPromises = games.map(game =>\n                axios.get('https://newsapi.org/v2/everything', {\n                    params: {\n                        q: game,\n                        language: 'en',\n                        apiKey: apiKey,\n                        pageSize: 20 // Fetch more articles, adjust this number as needed\n                    }\n                })\n            );\n\n            const responses = await Promise.all(newsPromises);\n\n            const allArticles = [];\n\n            responses.forEach((response) => {\n                let articles = response.data.articles;\n\n                // Apply filters\n                articles = filterByDate(articles);\n                articles = filterBySource(articles);\n\n                // Add a check to avoid empty articles\n                if (articles.length > 0) {\n                    articles.forEach(article => {\n                        // Avoid duplicate articles by checking if it's already added\n                        if (!allArticles.some(a => a.title === article.title)) {\n                            allArticles.push(article);\n                        }\n                    });\n                }\n            });\n\n            setNews(allArticles.sort((a, b) => new Date(b.publishedAt) - new Date(a.publishedAt)));\n            setLoading(false);\n        } catch (err) {\n            setError('Failed to fetch news');\n            setLoading(false);\n        }\n    };\n\n    fetchNewsForGames();\n}, []);"],"mappings":"AAAAA,SAAS,CAAC,MAAM;EACZ,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACA,MAAMC,YAAY,GAAGC,KAAK,CAACC,GAAG,CAACC,IAAI,IAC/BC,KAAK,CAACC,GAAG,CAAC,mCAAmC,EAAE;QAC3CC,MAAM,EAAE;UACJC,CAAC,EAAEJ,IAAI;UACPK,QAAQ,EAAE,IAAI;UACdC,MAAM,EAAEA,MAAM;UACdC,QAAQ,EAAE,EAAE,CAAC;QACjB;MACJ,CAAC,CACL,CAAC;MAED,MAAMC,SAAS,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACb,YAAY,CAAC;MAEjD,MAAMc,WAAW,GAAG,EAAE;MAEtBH,SAAS,CAACI,OAAO,CAAEC,QAAQ,IAAK;QAC5B,IAAIC,QAAQ,GAAGD,QAAQ,CAACE,IAAI,CAACD,QAAQ;;QAErC;QACAA,QAAQ,GAAGE,YAAY,CAACF,QAAQ,CAAC;QACjCA,QAAQ,GAAGG,cAAc,CAACH,QAAQ,CAAC;;QAEnC;QACA,IAAIA,QAAQ,CAACI,MAAM,GAAG,CAAC,EAAE;UACrBJ,QAAQ,CAACF,OAAO,CAACO,OAAO,IAAI;YACxB;YACA,IAAI,CAACR,WAAW,CAACS,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,KAAK,KAAKH,OAAO,CAACG,KAAK,CAAC,EAAE;cACnDX,WAAW,CAACY,IAAI,CAACJ,OAAO,CAAC;YAC7B;UACJ,CAAC,CAAC;QACN;MACJ,CAAC,CAAC;MAEFK,OAAO,CAACb,WAAW,CAACc,IAAI,CAAC,CAACJ,CAAC,EAAEK,CAAC,KAAK,IAAIC,IAAI,CAACD,CAAC,CAACE,WAAW,CAAC,GAAG,IAAID,IAAI,CAACN,CAAC,CAACO,WAAW,CAAC,CAAC,CAAC;MACtFC,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVC,QAAQ,CAAC,sBAAsB,CAAC;MAChCF,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAEDjC,iBAAiB,CAAC,CAAC;AACvB,CAAC,EAAE,EAAE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
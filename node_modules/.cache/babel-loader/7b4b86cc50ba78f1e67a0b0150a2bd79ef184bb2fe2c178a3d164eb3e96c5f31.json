{"ast":null,"code":"var _jsxFileName = \"/home/ali/Tunisian-Esports-Champions-/src/components/Forum.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Forum.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Forum = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [newPost, setNewPost] = useState({\n    title: '',\n    body: ''\n  });\n  const [newComment, setNewComment] = useState({\n    body: '',\n    author: ''\n  });\n\n  // Fetch posts when the component mounts\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  const fetchPosts = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/posts');\n      setPosts(response.data);\n    } catch (error) {\n      console.error('Error fetching posts:', error);\n    }\n  };\n\n  // Handle new post submission\n  const handlePostSubmit = async e => {\n    e.preventDefault();\n    try {\n      await axios.post('http://localhost:3001/posts', newPost);\n      setNewPost({\n        title: '',\n        body: ''\n      });\n      fetchPosts(); // Refresh the posts after adding a new one\n    } catch (error) {\n      console.error('Error creating post:', error);\n    }\n  };\n\n  // Handle new comment submission\n  const handleCommentSubmit = async (postId, e) => {\n    e.preventDefault();\n    try {\n      await axios.post(`http://localhost:3001/posts/${postId}/comments`, newComment);\n      setNewComment({\n        body: '',\n        author: ''\n      });\n      fetchPosts(); // Refresh the posts after adding a comment\n    } catch (error) {\n      console.error('Error adding comment:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Forum\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handlePostSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Post Title\",\n        value: newPost.title,\n        onChange: e => setNewPost({\n          ...newPost,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Post Body\",\n        value: newPost.body,\n        onChange: e => setNewPost({\n          ...newPost,\n          body: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Comments:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: post.comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [comment.body, \" - \", /*#__PURE__*/_jsxDEV(\"em\", {\n            children: comment.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 32\n          }, this)]\n        }, comment._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"comment-form\",\n        onSubmit: e => handleCommentSubmit(post._id, e),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Your Name\",\n          value: newComment.author,\n          onChange: e => setNewComment({\n            ...newComment,\n            author: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Write a comment...\",\n          value: newComment.body,\n          onChange: e => setNewComment({\n            ...newComment,\n            body: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, post._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Forum, \"iHqvd+4gRR6udJILoel7FX/f6hc=\");\n_c = Forum;\nexport default Forum;\nvar _c;\n$RefreshReg$(_c, \"Forum\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Forum","_s","posts","setPosts","newPost","setNewPost","title","body","newComment","setNewComment","author","fetchPosts","response","get","data","error","console","handlePostSubmit","e","preventDefault","post","handleCommentSubmit","postId","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","map","className","comments","comment","_id","_c","$RefreshReg$"],"sources":["/home/ali/Tunisian-Esports-Champions-/src/components/Forum.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Forum.css';\n\nconst Forum = () => {\n  const [posts, setPosts] = useState([]);\n  const [newPost, setNewPost] = useState({ title: '', body: '' });\n  const [newComment, setNewComment] = useState({ body: '', author: '' });\n\n  // Fetch posts when the component mounts\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n\n  const fetchPosts = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/posts');\n      setPosts(response.data);\n    } catch (error) {\n      console.error('Error fetching posts:', error);\n    }\n  };\n\n  // Handle new post submission\n  const handlePostSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await axios.post('http://localhost:3001/posts', newPost);\n      setNewPost({ title: '', body: '' });\n      fetchPosts();  // Refresh the posts after adding a new one\n    } catch (error) {\n      console.error('Error creating post:', error);\n    }\n  };\n\n  // Handle new comment submission\n  const handleCommentSubmit = async (postId, e) => {\n    e.preventDefault();\n    try {\n      await axios.post(`http://localhost:3001/posts/${postId}/comments`, newComment);\n      setNewComment({ body: '', author: '' });\n      fetchPosts();  // Refresh the posts after adding a comment\n    } catch (error) {\n      console.error('Error adding comment:', error);\n    }\n  };\n\n  return (\n    <div>\n    <h1>Forum</h1>\n  \n    {/* Post submission form */}\n    <form onSubmit={handlePostSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"Post Title\"\n        value={newPost.title}\n        onChange={(e) => setNewPost({ ...newPost, title: e.target.value })}\n      />\n      <textarea\n        placeholder=\"Post Body\"\n        value={newPost.body}\n        onChange={(e) => setNewPost({ ...newPost, body: e.target.value })}\n      />\n      <button type=\"submit\">Submit Post</button>\n    </form>\n  \n    {/* Displaying posts */}\n    {posts.map(post => (\n      <div key={post._id} className=\"post\">\n        <h2>{post.title}</h2>\n        <p>{post.body}</p>\n  \n        <p><strong>Comments:</strong></p>\n        <ul>\n          {post.comments.map(comment => (\n            <li key={comment._id}>\n              {comment.body} - <em>{comment.author}</em>\n            </li>\n          ))}\n        </ul>\n  \n        {/* Comment submission form */}\n        <form className=\"comment-form\" onSubmit={(e) => handleCommentSubmit(post._id, e)}>\n          <input\n            type=\"text\"\n            placeholder=\"Your Name\"\n            value={newComment.author}\n            onChange={(e) => setNewComment({ ...newComment, author: e.target.value })}\n          />\n          <textarea\n            placeholder=\"Write a comment...\"\n            value={newComment.body}\n            onChange={(e) => setNewComment({ ...newComment, body: e.target.value })}\n          />\n          <button type=\"submit\">Submit Comment</button>\n        </form>\n      </div>\n    ))}\n  </div>\n  );\n};\n\nexport default Forum;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/ali/Tunisian-Esports-Champions-/src/components/Forum.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Forum.css';\nimport Navbar from './Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Forum = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [newPost, setNewPost] = useState({\n    title: '',\n    body: ''\n  });\n  const [newComment, setNewComment] = useState({\n    body: '',\n    author: ''\n  });\n\n  // Fetch posts when the component mounts\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  const fetchPosts = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/posts');\n      setPosts(response.data);\n    } catch (error) {\n      console.error('Error fetching posts:', error);\n    }\n  };\n\n  // Handle new post submission\n  const handlePostSubmit = async e => {\n    e.preventDefault(); // Prevents the default form submission behavior\n\n    try {\n      const response = await fetch('/posts', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newPost)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to submit post');\n      }\n      const savedPost = await response.json();\n\n      // Add the new post to the state\n      setPosts(prevPosts => [savedPost, ...prevPosts]);\n\n      // Clear the form fields\n      setNewPost({\n        title: '',\n        body: ''\n      });\n    } catch (error) {\n      console.error('Error submitting post:', error);\n    }\n  };\n\n  // Handle new comment submission\n  const handleCommentSubmit = async (postId, e) => {\n    e.preventDefault();\n    try {\n      await axios.post(`http://localhost:3001/posts/${postId}/comments`, newComment);\n      setNewComment({\n        body: '',\n        author: ''\n      });\n      fetchPosts(); // Refresh the posts after adding a comment\n    } catch (error) {\n      console.error('Error adding comment:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forum-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Forum\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handlePostSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Post Title\",\n        value: newPost.title,\n        onChange: e => setNewPost({\n          ...newPost,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Post Body\",\n        value: newPost.body,\n        onChange: e => setNewPost({\n          ...newPost,\n          body: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Comments:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: post.comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [comment.body, \" - \", /*#__PURE__*/_jsxDEV(\"em\", {\n            children: comment.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 32\n          }, this)]\n        }, comment._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"comment-form\",\n        onSubmit: e => handleCommentSubmit(post._id, e),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Your Name\",\n          value: newComment.author,\n          onChange: e => setNewComment({\n            ...newComment,\n            author: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Write a comment...\",\n          value: newComment.body,\n          onChange: e => setNewComment({\n            ...newComment,\n            body: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, post._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(Forum, \"iHqvd+4gRR6udJILoel7FX/f6hc=\");\n_c = Forum;\nexport default Forum;\nvar _c;\n$RefreshReg$(_c, \"Forum\");","map":{"version":3,"names":["React","useState","useEffect","axios","Navbar","jsxDEV","_jsxDEV","Forum","_s","posts","setPosts","newPost","setNewPost","title","body","newComment","setNewComment","author","fetchPosts","response","get","data","error","console","handlePostSubmit","e","preventDefault","fetch","method","headers","JSON","stringify","ok","Error","savedPost","json","prevPosts","handleCommentSubmit","postId","post","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","map","comments","comment","_id","_c","$RefreshReg$"],"sources":["/home/ali/Tunisian-Esports-Champions-/src/components/Forum.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Forum.css';\nimport Navbar from './Navbar';\n\nconst Forum = () => {\n  const [posts, setPosts] = useState([]);\n  const [newPost, setNewPost] = useState({ title: '', body: '' });\n  const [newComment, setNewComment] = useState({ body: '', author: '' });\n\n  // Fetch posts when the component mounts\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n\n  const fetchPosts = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/posts');\n      setPosts(response.data);\n    } catch (error) {\n      console.error('Error fetching posts:', error);\n    }\n  };\n\n  // Handle new post submission\n  const handlePostSubmit = async (e) => {\n    e.preventDefault(); // Prevents the default form submission behavior\n  \n    try {\n      const response = await fetch('/posts', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(newPost),\n      });\n  \n      if (!response.ok) {\n        throw new Error('Failed to submit post');\n      }\n  \n      const savedPost = await response.json();\n      \n      // Add the new post to the state\n      setPosts((prevPosts) => [savedPost, ...prevPosts]);\n  \n      // Clear the form fields\n      setNewPost({ title: '', body: '' });\n    } catch (error) {\n      console.error('Error submitting post:', error);\n    }\n  };\n\n  // Handle new comment submission\n  const handleCommentSubmit = async (postId, e) => {\n    e.preventDefault();\n    try {\n      await axios.post(`http://localhost:3001/posts/${postId}/comments`, newComment);\n      setNewComment({ body: '', author: '' });\n      fetchPosts();  // Refresh the posts after adding a comment\n    } catch (error) {\n      console.error('Error adding comment:', error);\n    }\n  };\n\n  return (\n    <div className='forum-container'>\n        <Navbar />\n    <h1>Forum</h1>\n  \n    {/* Post submission form */}\n    <form onSubmit={handlePostSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"Post Title\"\n        value={newPost.title}\n        onChange={(e) => setNewPost({ ...newPost, title: e.target.value })}\n      />\n      <textarea\n        placeholder=\"Post Body\"\n        value={newPost.body}\n        onChange={(e) => setNewPost({ ...newPost, body: e.target.value })}\n      />\n      <button type=\"submit\">Submit Post</button>\n    </form>\n  \n    {/* Displaying posts */}\n    {posts.map(post => (\n      <div key={post._id} className=\"post\">\n        <h2>{post.title}</h2>\n        <p>{post.body}</p>\n  \n        <p><strong>Comments:</strong></p>\n        <ul>\n          {post.comments.map(comment => (\n            <li key={comment._id}>\n              {comment.body} - <em>{comment.author}</em>\n            </li>\n          ))}\n        </ul>\n  \n        {/* Comment submission form */}\n        <form className=\"comment-form\" onSubmit={(e) => handleCommentSubmit(post._id, e)}>\n          <input\n            type=\"text\"\n            placeholder=\"Your Name\"\n            value={newComment.author}\n            onChange={(e) => setNewComment({ ...newComment, author: e.target.value })}\n          />\n          <textarea\n            placeholder=\"Write a comment...\"\n            value={newComment.body}\n            onChange={(e) => setNewComment({ ...newComment, body: e.target.value })}\n          />\n          <button type=\"submit\">Submit Comment</button>\n        </form>\n      </div>\n    ))}\n  </div>\n  );\n};\n\nexport default Forum;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
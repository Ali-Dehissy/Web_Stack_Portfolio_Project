{"ast":null,"code":"var _jsxFileName = \"/home/ali/Web_Stack_Portfolio_Project/src/components/Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:3001\");\nconst Chat = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [username, setUsername] = useState(\"\"); // Assume username is set\n\n  useEffect(() => {\n    // Listen for new messages\n    socket.on(\"newMessage\", message => {\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n\n    // Listen for chat history\n    socket.on(\"chatHistory\", history => {\n      setMessages(history);\n    });\n\n    // Clean up on unmount\n    return () => {\n      socket.off(\"newMessage\");\n      socket.off(\"chatHistory\");\n    };\n  }, []);\n  const handleSendMessage = e => {\n    e.preventDefault();\n    if (newMessage.trim()) {\n      socket.emit(\"sendMessage\", {\n        username,\n        content: newMessage\n      });\n      setNewMessage(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.username, \": \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), msg.content]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Type your message...\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"ogjD6MuULfjIeWmTiPBA7tYEkug=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","io","jsxDEV","_jsxDEV","socket","Chat","_s","messages","setMessages","newMessage","setNewMessage","username","setUsername","on","message","prevMessages","history","off","handleSendMessage","e","preventDefault","trim","emit","content","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","onSubmit","type","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["/home/ali/Web_Stack_Portfolio_Project/src/components/Chat.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { io } from 'socket.io-client';\n\nconst socket = io(\"http://localhost:3001\");\n\nconst Chat = () => {\n    const [messages, setMessages] = useState([]);\n    const [newMessage, setNewMessage] = useState(\"\");\n    const [username, setUsername] = useState(\"\"); // Assume username is set\n\n    useEffect(() => {\n        // Listen for new messages\n        socket.on(\"newMessage\", (message) => {\n            setMessages((prevMessages) => [...prevMessages, message]);\n        });\n\n        // Listen for chat history\n        socket.on(\"chatHistory\", (history) => {\n            setMessages(history);\n        });\n\n        // Clean up on unmount\n        return () => {\n            socket.off(\"newMessage\");\n            socket.off(\"chatHistory\");\n        };\n    }, []);\n\n    const handleSendMessage = (e) => {\n        e.preventDefault();\n        if (newMessage.trim()) {\n            socket.emit(\"sendMessage\", { username, content: newMessage });\n            setNewMessage(\"\");\n        }\n    };\n\n    return (\n        <div className=\"chat-container\">\n            <h2>Chat Room</h2>\n            <div className=\"messages\">\n                {messages.map((msg, index) => (\n                    <div key={index}>\n                        <strong>{msg.username}: </strong>{msg.content}\n                    </div>\n                ))}\n            </div>\n            <form onSubmit={handleSendMessage}>\n                <input\n                    type=\"text\"\n                    value={newMessage}\n                    onChange={(e) => setNewMessage(e.target.value)}\n                    placeholder=\"Type your message...\"\n                    required\n                />\n                <button type=\"submit\">Send</button>\n            </form>\n        </div>\n    );\n};\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}